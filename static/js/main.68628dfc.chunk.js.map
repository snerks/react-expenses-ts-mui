{"version":3,"sources":["components/Header.tsx","context/AppReducer.ts","context/GlobalContext.tsx","components/Balance.tsx","components/IncomeExpenses.tsx","components/TransactionList.tsx","components/AddTransaction .tsx","App.tsx","theme.tsx","index.tsx"],"names":["Header","props","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","children","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","TransactionList","List","component","aria-label","AddTransaction","useState","text","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","Input","inputProps","onChange","target","placeholder","parseInt","Button","variant","color","Copyright","Typography","align","Link","href","Date","getFullYear","App","Container","maxWidth","Box","my","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.68628dfc.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport interface HeaderProps {\r\n}\r\n\r\nexport const Header: React.FC = (props: HeaderProps) => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    );\r\n}\r\n\r\n","import { GlobalState } from \"./GlobalContext\";\n\ninterface Action {\n  type: string;\n  payload?: any;\n}\n\nexport default (state: GlobalState, action: Action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transaction.id !== action.payload\n        )\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport { Transaction } from '../components/Transaction';\r\n\r\ninterface GlobalProviderProps {\r\n    children: any;\r\n}\r\n\r\nexport interface GlobalState {\r\n    transactions: Transaction[];\r\n    deleteTransaction?: Function;\r\n    addTransaction?: Function;\r\n}\r\n\r\n// Initial state\r\nconst initialState: GlobalState = {\r\n    transactions: [],\r\n    // deleteTransaction: (id: number) => { },\r\n    // addTransaction: (transaction: Transaction) => { },\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = (props: GlobalProviderProps) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id: number) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction: Transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {props.children}\r\n    </GlobalContext.Provider>);\r\n}","// import * as React from 'react';\r\n\r\n// export interface BalanceProps {\r\n// }\r\n\r\n// export const Balance: React.FC = (props: BalanceProps) => {\r\n//     return (\r\n//         <>\r\n//             <h4>Your Balance</h4>\r\n//             <h1 id=\"balance\">$0.00</h1>\r\n//         </>\r\n//     );\r\n// }\r\n\r\nimport React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n// import { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${total}</h1>\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\nexport const IncomeExpenses: React.FC = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    // const transactions: Transaction[] = [];\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">${expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\n// import { Transaction, TransactionView } from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport { List, ListItem, /* ListItemIcon, */ ListItemText, /* Divider, */ Button } from '@material-ui/core';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions, deleteTransaction } = useContext(GlobalContext);\r\n\r\n    // const transactions: Transaction[] = [];\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n\r\n            {/* <ul className=\"list\">\r\n                {transactions.map(transaction => (<TransactionView key={transaction.id} transaction={transaction} />))}\r\n            </ul> */}\r\n\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                {\r\n                    transactions.map(transaction => (\r\n                        // <TransactionView key={transaction.id} transaction={transaction} />\r\n                        <ListItem key={transaction.id}>\r\n                            <ListItemText primary={transaction.text + \" : \" + transaction.amount} />\r\n                            {/* <button \r\n                                onClick={() => deleteTransaction && deleteTransaction(transaction.id)} className=\"delete-btn\">x</button> */}\r\n                            <Button variant=\"contained\" color=\"default\"\r\n                                onClick={() => deleteTransaction && deleteTransaction(transaction.id)}>\r\n                                X\r\n                                </Button>\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        </>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\nimport { Input, Button } from '@material-ui/core';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n    // const addTransaction = (transaction: Transaction) => { };\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction && addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n\r\n            <form onSubmit={onSubmit}>\r\n\r\n                <div className=\"form-control\">\r\n                    {/* <label htmlFor=\"text\">Text</label> */}\r\n                    {/* <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" /> */}\r\n                    <Input type=\"text\" inputProps={{ 'aria-label': 'description' }} value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    {/* <label htmlFor=\"amount\">\r\n                        Amount <br />\r\n                        (negative value means \"expense\", positive value means \"income\")</label> */}\r\n                    <Input type=\"number\" value={amount} onChange={(e) => e.target.value && setAmount(parseInt(e.target.value, 10))} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                {/* <button className=\"btn\">Add transaction</button> */}\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Add transaction\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction ';\nimport { GlobalProvider } from './context/GlobalContext';\nimport { Container, Box, Typography, Link } from '@material-ui/core';\n// import Container from '@material-ui/core/Container';\n// import Typography from '@material-ui/core/Typography';\n// import Box from '@material-ui/core/Box';\n// import Link from '@material-ui/core/Link';\n// import ProTip from './ProTip';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Sample Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// export default function App() {\n//   return (\n//     <Container maxWidth=\"sm\">\n//       <Box my={4}>\n//         <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//           Create React App v4-beta example with TypeScript\n//         </Typography>\n//         <ProTip />\n//         <Copyright />\n//       </Box>\n//     </Container>\n//   );\n// }\n\nexport default function App() {\n  return (\n    <GlobalProvider>\n      <Container maxWidth=\"sm\">\n        <Box my={4}>\n          <Header />\n          <div className=\"container\">\n            <Balance />\n            <IncomeExpenses />\n            <TransactionList />\n            <AddTransaction />\n          </div>\n          <Copyright />\n        </Box>\n      </Container>\n    </GlobalProvider>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}